/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type { RBAC, RBACInterface } from "../RBAC";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "admin",
        type: "address",
      },
    ],
    name: "AdminAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "admin",
        type: "address",
      },
    ],
    name: "AdminRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "member",
        type: "address",
      },
    ],
    name: "MemberAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "member",
        type: "address",
      },
    ],
    name: "MemberRemoved",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_admin",
        type: "address",
      },
    ],
    name: "addAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_member",
        type: "address",
      },
    ],
    name: "addMember",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "admins",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "members",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_admin",
        type: "address",
      },
    ],
    name: "removeAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_member",
        type: "address",
      },
    ],
    name: "removeMember",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060018060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550610d96806100b76000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063429b62e51161005b578063429b62e5146100ea578063704802751461011a5780638da5cb5b14610136578063ca6d56dc146101545761007d565b806308ae4b0c146100825780630b1ca49a146100b25780631785f53c146100ce575b600080fd5b61009c60048036038101906100979190610a14565b610170565b6040516100a99190610a5c565b60405180910390f35b6100cc60048036038101906100c79190610a14565b610190565b005b6100e860048036038101906100e39190610a14565b61039c565b005b61010460048036038101906100ff9190610a14565b610554565b6040516101119190610a5c565b60405180910390f35b610134600480360381019061012f9190610a14565b610574565b005b61013e610780565b60405161014b9190610a86565b60405180910390f35b61016e60048036038101906101699190610a14565b6107a4565b005b60026020528060005260406000206000915054906101000a900460ff1681565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1680610233575060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b610272576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161026990610afe565b60405180910390fd5b600260008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166102fe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102f590610b6a565b60405180910390fd5b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508073ffffffffffffffffffffffffffffffffffffffff167f6e76fb4c77256006d9c38ec7d82b45a8c8f3c27b1d6766fffc42dfb8de68449260405160405180910390a250565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461042a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042190610bfc565b60405180910390fd5b600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166104b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ad90610c68565b60405180910390fd5b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508073ffffffffffffffffffffffffffffffffffffffff167fa3b62bc36326052d97ea62d63c3d60308ed4c3ea8ac079dd8499f1e9c4f80c0f60405160405180910390a250565b60016020528060005260406000206000915054906101000a900460ff1681565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1680610617575060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b610656576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064d90610afe565b60405180910390fd5b600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16156106e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106da90610cd4565b60405180910390fd5b60018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508073ffffffffffffffffffffffffffffffffffffffff167f44d6d25963f097ad14f29f06854a01f575648a1ef82f30e562ccd3889717e33960405160405180910390a250565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1680610847575060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b610886576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161087d90610afe565b60405180910390fd5b600260008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615610913576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161090a90610d40565b60405180910390fd5b6001600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508073ffffffffffffffffffffffffffffffffffffffff167fb251eb052afc73ffd02ffe85ad79990a8b3fed60d76dbc2fa2fdd7123dffd91460405160405180910390a250565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006109e1826109b6565b9050919050565b6109f1816109d6565b81146109fc57600080fd5b50565b600081359050610a0e816109e8565b92915050565b600060208284031215610a2a57610a296109b1565b5b6000610a38848285016109ff565b91505092915050565b60008115159050919050565b610a5681610a41565b82525050565b6000602082019050610a716000830184610a4d565b92915050565b610a80816109d6565b82525050565b6000602082019050610a9b6000830184610a77565b92915050565b600082825260208201905092915050565b7f5065726d697373696f6e2064656e696564000000000000000000000000000000600082015250565b6000610ae8601183610aa1565b9150610af382610ab2565b602082019050919050565b60006020820190508181036000830152610b1781610adb565b9050919050565b7f41646472657373206973206e6f742061206d656d626572000000000000000000600082015250565b6000610b54601783610aa1565b9150610b5f82610b1e565b602082019050919050565b60006020820190508181036000830152610b8381610b47565b9050919050565b7f4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f60008201527f6e00000000000000000000000000000000000000000000000000000000000000602082015250565b6000610be6602183610aa1565b9150610bf182610b8a565b604082019050919050565b60006020820190508181036000830152610c1581610bd9565b9050919050565b7f41646472657373206973206e6f7420616e2061646d696e000000000000000000600082015250565b6000610c52601783610aa1565b9150610c5d82610c1c565b602082019050919050565b60006020820190508181036000830152610c8181610c45565b9050919050565b7f4164647265737320697320616c726561647920616e2061646d696e0000000000600082015250565b6000610cbe601b83610aa1565b9150610cc982610c88565b602082019050919050565b60006020820190508181036000830152610ced81610cb1565b9050919050565b7f4164647265737320697320616c72656164792061206d656d6265720000000000600082015250565b6000610d2a601b83610aa1565b9150610d3582610cf4565b602082019050919050565b60006020820190508181036000830152610d5981610d1d565b905091905056fea264697066735822122060f620881ea44d568bb24ae19cecc4900b90254b5145914a63dc59f73de9292964736f6c63430008130033";

type RBACConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RBACConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RBAC__factory extends ContractFactory {
  constructor(...args: RBACConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      RBAC & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): RBAC__factory {
    return super.connect(runner) as RBAC__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RBACInterface {
    return new Interface(_abi) as RBACInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): RBAC {
    return new Contract(address, _abi, runner) as unknown as RBAC;
  }
}
